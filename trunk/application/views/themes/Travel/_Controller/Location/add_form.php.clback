<?php
PageUtil::addVar("title",$this->lang->line("post_lang_add_post"));
PageUtil::addVar("stylesheet",'<link rel="stylesheet" href="'.Util::ThemePath().'/style/form.css">');
PageUtil::addVar("stylesheet",'<style type="text/css">@import url('.Util::ThemePath().'/js/plupload/jquery.plupload.queue/css/jquery.plupload.queue.css);</style>');
PageUtil::addVar("javascript",'<script type="text/javascript" src="http://bp.yahooapis.com/2.4.21/browserplus-min.js"></script>');
PageUtil::addVar("javascript",'<script type="text/javascript" src="'.Util::ThemePath().'/js/plupload/plupload.full.js"></script>');
PageUtil::addVar("javascript",'<script type="text/javascript" src="'.Util::ThemePath().'/js/plupload/jquery.plupload.queue/jquery.plupload.queue.js"></script>');
PageUtil::addVar("javascript",'<script type="text/javascript">
$(document).ready(function(){
    
    $("#title, #editor").blur(function() {
      autoSave();
    });
    function autoSave(){
      if($("#id").val()!=0){
        $.post(\''.base_url('post/create/').'\',{id: $("#id").val(),title: $("#title").val(), body:tinyMCE.activeEditor.getContent(), longitude: $("#longitude").val(), latitude: $("#latitude").val(), ajax: 1, force: 1 },successHandler);
      }else if($("#id").val()==0){
        $.post(\''.base_url('post/create/').'\',{title: $("#title").val(), body:tinyMCE.activeEditor.getContent(), longitude: $("#longitude").val(), latitude: $("#latitude").val(), ajax: 1, force: 1 },successHandler);
      }
    }
    
    function successHandler(data){
      //alert(data);
      var json = jQuery.parseJSON(data);
      $("#id").val(json.id);
      $("#status").html(json.status).show("slow").delay(5000).hide("slow");
    }
    
    (function($){
        $.fn.addImg = function(){
            tinyMCE.execCommand(\'mceInsertContent\',false,\'<img src="\'+this.attr(\'src\')+\'"/>\');
        };
    })(jQuery);
    //Uploader Control
    $("#btnShow").css("display", "block");
    $("#btnHide").css("display", "none");
    $("#uploader").hide();
    $("#btnHide").click(function() {
      $("#uploader").hide("slow");
      $("#btnShow").css("display", "block");
      $("#btnHide").css("display", "none");
    });
    $("#btnShow").click(function() {
      autoSave();
      $("#uploader").show("slow");
      $("#btnShow").css("display", "none");
      $("#btnHide").css("display", "block");
      $("#btnHide").addClass("hide-button");
    });
});
// Convert divs to queue widgets when the DOM is ready
$(document).ready(function() {
  updateImages();
  function updateImages(){  
            $.post("'.base_url("/images/ajax_list").'", { post_id: $("#id").val() },
            function(data) {
              $("#side_bar_block_image").html(data).hide("slow").delay(200).show("slow");
              $("#side_bar_block_image img").click(function() {
                $(this).addImg();
              });
            });
  }
  
	$("#uploader").pluploadQueue({
		// General settings
		runtimes : \'html5\',
		url : \''.base_url("/images/ajax_upload").'\',
		max_file_size : \'10mb\',
		chunk_size : \'1mb\',
		unique_names : true,
    

		// Resize images on clientside if we can
		resize : {width : 320, height : 240, quality : 90},

		// Specify what files to browse for
		filters : [
			{title : "Image files", extensions : "jpg,gif,png"},
			{title : "Zip files", extensions : "zip"}
		],

		// Flash settings
		flash_swf_url : \'/plupload/js/plupload.flash.swf\',

		// Silverlight settings
		silverlight_xap_url : \'/plupload/js/plupload.silverlight.xap\',
    
    init : {

			StateChanged: function(up) {
				// Called when the state of the queue is changed
				//log(\'[StateChanged]\', up.state == plupload.STARTED ? "STARTED" : "STOPPED");
        var uploader = $(\'#uploader\').pluploadQueue();
        
        if(up.state == plupload.STOPPED){
          setTimeout(function() {
                $( "#uploader" ).hide(\'slow\').delay(500).show(\'slow\');
                uploader.splice();
                $(".plupload_buttons").css("display", "inline");
                $(".plupload_upload_status").css("display", "inline");
                $(".plupload_start").addClass("plupload_disabled");
                $(".plupload_upload_status").css("display", "none");
                uploader.refresh();
          }, 100 );
          
        }
			},
      
			FileUploaded: function(up, file, info) {
				// Called when a file has finished uploading
				//log(\'[FileUploaded] File:\', file, "Info:", info);
        
        plupload.each(info, function(value, key) {
       
          if(key == "response"){
            var value = jQuery.parseJSON(value);
            if(value.result == "TRUE"){
              updateImages();
            }
          }
			  });
        
       
        //$( "#side_bar_block_image" ).delay(100).fadeIn(1000);
        
			}
		}
	});
    var $uploader = $("#uploader").pluploadQueue();
    $uploader.settings.multipart_params = {post_id: $(\'#id\').val()};
    
});

  
</script>');

PageUtil::addVar("javascript",'
<script type="text/javascript">

  $(document).ready(function(){
    
    tinyMCE.init({
        mode : "specific_textareas",
        editor_selector : "mceEditor",
        width: "100%",
        theme : "advanced",
        plugins : "youtube, inlinepopups,autoresize,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template",
        //theme_advanced_buttons1 : "justifyleft,justifycenter,justifyright,justifyfull",
        //theme_advanced_buttons2: ",tablecontrols,|,images,youtube,|,bold,italic,underline,strikethrough,|,undo,redo,|,cut,copy,paste,|,code",
        theme_advanced_buttons1 : "fullscreen,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,|,styleselect,formatselect,fontselect,fontsizeselect",
        
        
        theme_advanced_buttons2 : "search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
        theme_advanced_buttons3 : "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
        theme_advanced_buttons4 : "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreakcut,|,copy,paste,pastetext,pasteword,|,image,youtube,|",
        theme_advanced_toolbar_location : "external",
        theme_advanced_toolbar_align : "left",
        theme_advanced_statusbar_location : "bottom",
        theme_advanced_resizing : false,
        theme_advanced_source_editor_width: 630,
        file_browser_callback : "ajaxfilemanager",
        autoresize_min_height: 500,
        autoresize_not_availible_height: 10,
        autoresize_on_init: true,
        autoresize_hide_scrollbars: true
    });
    
    tinyMCE.triggerSave(false, true);
    
    function ajaxfilemanager(field_name, url, type, win) {
			var ajaxfilemanagerurl = "'.Util::ThemePath().'/js/tiny_mce/plugins/ajaxfilemanager/ajaxfilemanager.php";
			var view = "detail";
			switch (type) {
				case "image":
				view = "thumbnail";
					break;
				case "media":
					break;
				case "flash": 
					break;
				case "file":
					break;
				default:
					return false;
			}
      tinyMCE.activeEditor.windowManager.open({
          url: "'.Util::ThemePath().'/js/tiny_mce/plugins/ajaxfilemanager/ajaxfilemanager.php?view=" + view,
          width: 782,
          height: 440,
          inline : "yes",
          close_previous : "no"
      },{
          window : win,
          input : field_name
      });
      
      }
  });
  
</script>
      
      <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
      <script type="text/javascript">
      var geocoder = new google.maps.Geocoder();    
			var markersArray = [];
			var marker;    
			
      function geocodePosition(pos) {
        geocoder.geocode({
          latLng: pos
        }, function(responses) {
          if (responses && responses.length > 0) {
            updateMarkerAddress(responses[0].formatted_address);
          } else {
            updateMarkerAddress(\'Cannot determine address at this location.\');
          }
        });
      }

      function updateMarkerStatus(str) {
        document.getElementById(\'markerStatus\').innerHTML = str;
      }

      function updateMarkerPosition(latLng) {

        document.getElementById("latitude").value = latLng.lat();
        document.getElementById("longitude").value = latLng.lng();


      }

      function updateMarkerAddress(str) {
        document.getElementById(\'address\').value = str;
      }

      function initialize() {
        
        var latLng = new google.maps.LatLng('.$post['pst_latitude'].','.$post['pst_longitude'].');

        var map = new google.maps.Map(document.getElementById(\'mapCanvas\'), {
          scrollwheel: false,
          zoom: 11,
          center: latLng,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        
        
        marker = new google.maps.Marker({
          position: latLng,
          title: \'\',
          map: map,
          draggable: false
        });
        
        
        markersArray.push(marker); 
        google.maps.event.addListener(map, \'click\', function(e) {
          placeMarker(e.latLng, map);
        });
        
        // Update current position info.
        updateMarkerPosition(latLng);
        geocodePosition(latLng);
        
        /*
        // Add dragging event listeners.
        google.maps.event.addListener(marker, \'dragstart\', function() {
          updateMarkerAddress(\'Dragging...\');
        });
        
        google.maps.event.addListener(marker, \'drag\', function() {
          updateMarkerStatus(\'Dragging...\');
          updateMarkerPosition(marker.getPosition());
        });
        
        google.maps.event.addListener(marker, \'dragend\', function() {
          updateMarkerStatus(\'Drag ended\');
          geocodePosition(marker.getPosition());
        });
        */
      }
      
      function placeMarker(position, map) {
      
      	//alert(position);
      	//Clean marker point
      	clearOverlays();
      	
      	//Make new marker object
        marker = new google.maps.Marker({
          position: position,
          map: map
        });
        
        //Add marker to array
				markersArray.push(marker); 
				
				//Write marker to map       
        map.panTo(position);
        
        updateMarkerAddress(\'Clicking...\'); 
        
				updateMarkerPosition(marker.getPosition()); 
				
				geocodePosition(marker.getPosition());
      }
      
			function clearOverlays() {
				if (markersArray) {
					for (i in markersArray) {
						markersArray[i].setMap(null);
					}
				}
			}        

      // Onload handler to fire off the app.
      google.maps.event.addDomListener(window, \'load\', initialize);
      
      </script>
');
?>



	<!-- Blogpost -->
	<section class="blogpost grid_12">
  <h2 class="section_heading text_big"><?=$this->lang->line("post_lang_add_post")?></h2>
  <div id="add_form">
  <div id="status" s></div>
  <?php echo form_open(base_url('post/create')); ?>
  <input type="hidden" value="<?=$post['pst_id']?>" id="id" name="id" />
  <div class="topHolder">
    <span class="GM1BAGKBGJB blogg-title">โพสต์</span>
    <span class="GM1BAGKBJJB blogg-title">·</span>
    <?php
    echo form_input('title', $post['pst_title'], 'id="title" class="GM1BAGKBHEC titleField textField GM1BAGKBGEC" dir="ltr" title="ชื่อ" size="60"');
    ?>
    <span class="GM1BAGKBNIB">
      <?php echo form_submit('submit', $this->lang->line("post_lang_submit"), 'class="blogg-button blogg-primary"'); ?>
      <button class="blogg-button" tabindex="0" onClick="history.go(-1)">ปิด</button>
    </span>
  </div>
  <div id="editorPanel"></div>
    <div id="wrapper-editor">
      <div id="editor">
        <textarea name="body" class="mceEditor" style="width:100%" id="txtBody" >
        <?=$post['pst_body']?>
        </textarea>
      </div>
      <div class="clear"></div>
    </div>
  </div>
    <div id="add_form_right">
    <h2 class="text_big">{_ post_lang_configuration}</h2>
      <div class="side_bar_block">
        <h3 class="image">{_ post_lang_image_manager}</h3>
        <div id="side_bar_block_image">
        </div>
        <div id="uploader">
      		<p>You browser doesn't have Flash, Silverlight, Gears, BrowserPlus or HTML5 support.</p>
      	</div>
        <span id="btnHide"  class="upload-button" onClick="return(false);"></span>
        <span id="btnShow"  class="upload-button" onClick="return(false);"></span>
      </div>
      
      <div class="side_bar_block">
        <h3 class="tag">{_ post_lang_tag}</h3>
      </div>
      
      <div class="side_bar_block">
        <h3 class="location">{_ post_lang_location}</h3>
        <div id="mapCanvas"></div>
        <input type="hidden" value="" id="longitude" name="longitude">
        <input type="hidden" value="" id="latitude" name="latitude">
        <input type="hidden" value="" id="address" name="address">
      </div>
    </div>
    <div class="clear"></div>
	</section>
  <?php echo form_close(); ?>
	<div class="clearfix"></div>

	<hr class="dashed grid_12" />
